/**
 * FULLSCREEN HOOK - Generated by AWS Q - 
 * A hook to handle fullscreen functionality
 * Fixes some issues with webgl fullscreen
 * @returns isFullscreen, toggleFullscreen
*/


import { useState, useEffect } from "react";

const useFullscreen = () => {
	const [isFullscreen, setIsFullscreen] = useState(false);

	const toggleFullscreen = () => {
		const elem = document.documentElement;

		if (!document.fullscreenElement) {
			elem.requestFullscreen?.()
				.then(() => setIsFullscreen(true))
				.catch((err) => console.error("Error enabling fullscreen:", err));
		} else {
			document.exitFullscreen?.()
				.then(() => setIsFullscreen(false))
				.catch((err) => console.error("Error exiting fullscreen:", err));
		}
	};

	useEffect(() => {
		const handleFullscreenChange = () => {
			setIsFullscreen(!!document.fullscreenElement);
		};

		document.addEventListener("fullscreenchange", handleFullscreenChange);
		return () => {
			document.removeEventListener("fullscreenchange", handleFullscreenChange);
		};
	}, []);

	useEffect(() => {
		const handleKeyDown = (event: KeyboardEvent) => {
			if (event.key === "F11") {
				event.preventDefault();
				toggleFullscreen();
			}
		};

		window.addEventListener("keydown", handleKeyDown);
		return () => {
			window.removeEventListener("keydown", handleKeyDown);
		};
	}, []);

	return { isFullscreen, toggleFullscreen };
};

export default useFullscreen;
